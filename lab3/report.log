2023-10-28 13:48:00,318 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 13:48:00,390 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.4351813433108296e-12, best pos: [-5.49457170e-08  1.19672984e-06]
2023-10-28 13:49:16,846 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 13:49:16,893 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.181486795079055e-13, best pos: [-6.76900287e-07  5.09857511e-07]
2023-10-28 13:49:37,013 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.5}
2023-10-28 13:49:37,029 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5896111132198215e-16, best pos: [ 8.36704468e-09 -9.43152557e-09]
2023-10-28 13:49:39,142 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2023-10-28 13:49:39,142 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2023-10-28 13:58:41,216 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 13:59:04,119 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 13:59:04,151 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.060951619665126, best pos: [1.0124363  1.01780369]
2023-10-28 13:59:06,551 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2023-10-28 13:59:06,551 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2023-10-28 13:59:44,863 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.5}
2023-10-28 13:59:44,863 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.07387610239702797, best pos: [0.23796153 0.13134082]
2023-10-28 13:59:47,200 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2023-10-28 13:59:47,200 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2023-10-28 14:00:15,876 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:00:16,158 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.019440324702268, best pos: [1.00712379 1.0025677 ]
2023-10-28 14:00:18,299 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2023-10-28 14:00:18,300 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2023-10-28 14:00:36,642 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:00:36,971 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.0234915720833238, best pos: [1.00079136 1.01089477]
2023-10-28 14:00:39,527 - matplotlib.animation - WARNING - MovieWriter imagemagick unavailable; using Pillow instead.
2023-10-28 14:00:39,527 - matplotlib.animation - INFO - Animation.save using <class 'matplotlib.animation.PillowWriter'>
2023-10-28 14:03:10,981 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:03:11,279 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.155373152930366, best pos: [1.0212261  1.00698912]
2023-10-28 14:04:16,504 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:04:16,800 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.0286844797619565, best pos: [1.0010776  1.00752839]
2023-10-28 14:05:43,857 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\pyswarms\backend\generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-10-28 14:05:58,196 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\pyswarms\backend\generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-10-28 14:07:02,261 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:07:02,559 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.0245804909549285, best pos: [1.00711211 1.00015892]
2023-10-28 14:07:38,812 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:07:39,110 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.0625121784948277, best pos: [1.00988607 1.00692374]
2023-10-28 14:07:39,110 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:07:39,393 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 9.877393282194788, best pos: [0.07225184 0.03298255 0.9485308  0.04741981 0.07060191 0.18062589]
2023-10-28 14:15:32,571 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:17:18,491 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:20:08,518 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:20:08,809 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.0269989430457975, best pos: [0.18014407 0.99589413 0.36215007 0.09807463 0.82057672 0.92041404]
2023-10-28 14:21:50,064 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:21:50,361 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.826549451579662, best pos: [0.5564645  0.54691999 0.9889489  0.99950408 0.36200106 0.34807923]
2023-10-28 14:27:23,575 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:27:23,858 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.8281643666438305, best pos: [0.42729984 0.39136993 0.99571145 0.98336004 0.38755636 0.10280839]
2023-10-28 14:29:14,250 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:29:14,988 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.8154624935704406, best pos: [0.56346212 0.51761502 0.98688531 0.98414087 0.43007144 0.32203997]
2023-10-28 14:29:58,963 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:29:59,261 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.7945866537354647, best pos: [0.33617663 0.35565407 0.95282446 0.99445846 0.39742002 0.45171062]
2023-10-28 14:30:54,835 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:30:55,133 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.814633008310288, best pos: [0.47814794 0.39626938 0.99892653 0.99358826 0.30201415 0.56745061]
2023-10-28 14:31:24,375 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:31:24,664 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.8086540984845114, best pos: [0.61651534 0.63500816 0.99711606 0.99789374 0.46742613 0.46649179]
2023-10-28 14:31:36,875 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:31:37,173 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.8110159992176675, best pos: [0.44966533 0.46875691 0.98410747 0.99779689 0.33472428 0.57145293]
2023-10-28 14:32:17,176 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:32:17,458 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.813483617147921, best pos: [0.4226378  0.4490246  0.9811759  0.98756119 0.32695152 0.38238325]
2023-10-28 14:32:55,471 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:32:56,208 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.8009279855086833, best pos: [0.22812942 0.27461497 0.95696679 0.99702486 0.30730886 0.46497121]
2023-10-28 14:33:02,393 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:33:03,083 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.8278136691379676, best pos: [0.63855712 0.55958087 0.98993137 0.99544861 0.49488161 0.15757875]
2023-10-28 14:33:09,263 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:33:09,984 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.802045501816547, best pos: [0.51490506 0.53754521 0.98535226 0.98804185 0.49185482 0.41534048]
2023-10-28 14:33:41,436 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:33:41,719 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.825212125344908, best pos: [0.50094168 0.47077725 0.9848195  0.99762231 0.41315925 0.27576228]
2023-10-28 14:33:53,296 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:33:53,594 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.811605732976183, best pos: [0.2691801  0.26923667 0.96144626 0.98697025 0.45615519 0.10554269]
2023-10-28 14:34:07,911 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:34:08,209 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.819158105984091, best pos: [0.38216469 0.40303637 0.96828261 0.9992539  0.22936115 0.31049546]
2023-10-28 14:34:34,915 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:34:35,199 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.8084501017212573, best pos: [0.76042117 0.69612448 0.96087214 0.98173601 0.30771867 0.14300797]
2023-10-28 14:59:31,525 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-10-28 14:59:31,808 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.820076133536606, best pos: [0.50986295 0.53821406 0.99562436 0.98711481 0.41331153 0.28555133]
